{
	"env": {
		"browser": true,
		"es6": true,
		"es2021": true,
		"node": true
	},
	"globals": {
		"JSX": true
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true,
			"tsx": true
		},
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": "./tsconfig.json"
	},
	"rules": {
		"@typescript-eslint/semi": "error",
		"@typescript-eslint/explicit-function-return-type": "error",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-misused-promises": "off",
		"@typescript-eslint/no-inferrable-types": "error",
		"@typescript-eslint/no-non-null-assertion": "error",
		"@typescript-eslint/no-unsafe-assignment": "off",
		"@typescript-eslint/no-unsafe-call": "off",
		"@typescript-eslint/no-unsafe-member-access": "off",
		"@typescript-eslint/no-unsafe-return": "off",
		"@typescript-eslint/no-unused-vars": "off",
		"@typescript-eslint/typedef": [
			"error",
			{
				"arrayDestructuring": false,
				"arrowParameter": false,
				"memberVariableDeclaration": true,
				"objectDestructuring": false,
				"parameter": true,
				"propertyDeclaration": true,
				"variableDeclaration": false,
				"variableDeclarationIgnoreFunction": false
			}
		],
		"comma-dangle": [ "error", "never" ],
		"max-len": "off",
		"max-nested-callbacks": [ "error", 5 ],
		"no-console": "warn",
		"no-restricted-imports": "error",
		"no-restricted-syntax": [
			"error",
			"FunctionExpression",
			"WithStatement",
			"BinaryExpression[operator='in']",
			{
				"selector": "ExportDefaultDeclaration > FunctionDeclaration[id.name]",
				"message": "Default export functions must be anonymous."
			}
		],
		"object-curly-newline": [
			"error",
			{
				// "ObjectExpression": "always",
				// "ObjectPattern": "always",
				"ExportDeclaration": "always",
				"ImportDeclaration": "never"
			}
		],
		"prefer-destructuring": "error",
		"import/no-unresolved": "error",
		"import/prefer-default-export": "error",
		"import/no-anonymous-default-export": "off",
		"import/order": [
			"error",
			{
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				}
			}
		],
		"indent": ["error", "tab", { "SwitchCase": 1 }],
		"require-await": "error",
		"react/destructuring-assignment": "off",
		"react/display-name": "off",
		"react/jsx-closing-bracket-location": ["error", "tag-aligned"],
		"react/jsx-curly-spacing": "error",
		"react/jsx-equals-spacing": ["error", "never"],
		"react/jsx-first-prop-new-line": ["error", "always"],
		"react/jsx-indent": ["error", "tab"],
		"react/jsx-indent-props": ["error", "tab"],
		"react/jsx-one-expression-per-line": ["error", { "allow": "literal" }],
		"react/jsx-key": "off",
		"react/jsx-max-props-per-line": "error",
		"react/jsx-newline": ["error", { "prevent": false }],
		"react/jsx-props-no-spreading": "off",
		"react/jsx-tag-spacing": "error",
		"react/jsx-uses-react": "error",
		"react/jsx-uses-vars": "error",
		"react/react-in-jsx-scope": "off",
			"react/require-default-props": "off",
		"react/jsx-wrap-multilines": [
			"error",
			{
				"declaration": "parens",
				"assignment": "parens",
				"return": "parens",
				"arrow": "ignore",
				"condition": "ignore",
				"logical": "ignore",
				"prop": "ignore"
			}
		],
		"semi": "error",
		"quotes": [
			"error",
			"double",
			{
				"avoidEscape": true,
				"allowTemplateLiterals": true
			}
		],
		"sort-exports/sort-exports": [
			"error", {
				"sortDir": "asc"
			}
		],
		"unused-imports/no-unused-imports": "error",
		"unused-imports/no-unused-vars": "off"
	},
	"plugins": [
		"@typescript-eslint",
		"import",
		"sort-exports",
		"react-hooks",
		"unused-imports",
		"json"
	],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"plugin:react/jsx-runtime",
		"plugin:react/recommended"
	],
	"settings": {
		"import/parsers": {
			"@typescript-eslint/parser": [
				".ts",
				".tsx"
			]
		},
		"import/resolver": {
			"typescript": {
				"alwaysTryTypes": true
			},
			"node": {
				"extensions": [
					".js",
					".jsx",
					".ts",
					".tsx"
				]
			}
		},
		"react": {
			"version": "detect"
		}
	}
}